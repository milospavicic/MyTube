@model MyTube.Models.Video
@{
    ViewBag.Title = "NewVideo";
}
@if (Session["loggedInUserStatus"] == null || (string)Session["loggedInUserStatus"] == "True")
{
    <script>
        window.location.href = '/Home/Index/';
    </script>
}
<html>
<head>
    <script src="~/Scripts/newVideo.js" type="text/javascript"></script>
    <link rel="stylesheet" type="text/css" href="~/Content/newVideo.css">
</head>
<body>
    @using (Html.BeginForm("NewVideo", "Home", FormMethod.Post, new { id = "newVideoForm" }))
    {
        @Html.AntiForgeryToken()
        <div id="newVideoDiv" class="thumbnail col-md-4 col-sm-5 col-xs-11">
            <div class="modal-header">
                <div class="modal-header" id="newVideoHeader">
                    <h2 id="loginMessage">New Video</h2>
                </div>
                <div class="col-md-12">
                    <h5 id="loginMessage">@ViewBag.Message</h5>
                </div>
                @Html.LabelFor(model => model.VideoUrl, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.VideoUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VideoUrl, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.VideoName, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.VideoName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VideoName, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.VideoDescription, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.VideoDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VideoDescription, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.VideoType, "VideoType", htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.DropDownList("VideoType", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VideoType, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-12">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.CommentsEnabled)
                        @Html.LabelFor(model => model.CommentsEnabled, htmlAttributes: new { @class = "control-label col-md-12" })
                        @Html.ValidationMessageFor(model => model.CommentsEnabled, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.RatingEnabled)
                        @Html.LabelFor(model => model.RatingEnabled, htmlAttributes: new { @class = "control-label col-md-12" })
                        @Html.ValidationMessageFor(model => model.RatingEnabled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="col-md-12">
                    <input type="submit" value="Create" class="btn btn-danger btn-block" />
                </div>
            </div>
        </div>
    }
</body>
</html>

